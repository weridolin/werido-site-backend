# Generated by Django 4.0.4 on 2023-02-12 13:13

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import thirdApis.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApiCollector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('platform', models.CharField(default='uncle-lin', help_text='api所属平台', max_length=64, verbose_name='api所属平台')),
                ('is_free', models.BooleanField(default=False, help_text='是否免费', verbose_name='是否免费')),
                ('api_type', models.CharField(default='', help_text='api所属类别', max_length=64, verbose_name='api所属类别')),
                ('api_name', models.CharField(default='unknown', help_text='api名称', max_length=64, verbose_name='api名称')),
                ('api_icon', models.CharField(help_text='api对应的icon', max_length=64, verbose_name='api对应的icon')),
                ('api_url', models.URLField(default='unknown', help_text='api对应的url', verbose_name='api对应的url')),
                ('clicked', models.PositiveIntegerField(default=0, help_text='点击次数', verbose_name='点击次数')),
                ('expire_time', models.DateTimeField(default=thirdApis.models.default_expire_time, help_text='过期时间', verbose_name='过期时间')),
                ('api_price', models.FloatField(default=0.0, help_text='Api价格', verbose_name='Api价格')),
                ('api_price_unit', models.CharField(default=0.0, help_text='Api价格单位', max_length=64, verbose_name='Api价格单位')),
            ],
            options={
                'verbose_name': '各大Api集合',
                'verbose_name_plural': '各大Api集合',
                'db_table': 'ac_info_set',
            },
        ),
        migrations.CreateModel(
            name='ChatGPTMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('uuid', models.UUIDField(db_index=True, default=thirdApis.models.get_uuid, help_text='消息UUID', verbose_name='消息UU会话ID')),
                ('conversation_id', models.BigIntegerField(help_text='所属会话ID', verbose_name='所属会话ID')),
                ('role', models.SmallIntegerField(choices=[(0, 'query'), (1, 'answer')], help_text='消息发送者角色', verbose_name='消息发送者角色')),
                ('content', models.TextField(help_text='消息内容', verbose_name='消息内容')),
                ('content_type', models.CharField(help_text='消息类型', max_length=16, verbose_name='消息类别')),
                ('parent_message_uuid', models.UUIDField(default='0', help_text='上一条消息UUID,主要记录会话里面的顺序', null=True, verbose_name='上一条消息ID')),
                ('children_message_uuid', models.UUIDField(default='-1', help_text='下一条消息UUID,主要记录会话里面的顺序', null=True, verbose_name='下一条消息ID')),
            ],
            options={
                'verbose_name': 'chatGPT聊天消息',
                'verbose_name_plural': 'chatGPT聊天消息',
                'db_table': 'chatGPT_message',
            },
        ),
        migrations.CreateModel(
            name='ShortUrlRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('url', models.URLField(help_text='url', verbose_name='url')),
                ('short_flag', models.CharField(default='undefined', help_text='短链接', max_length=64, null=True, verbose_name='短链接')),
                ('description', models.TextField(help_text='描述', null=True, verbose_name='url描述')),
                ('type', models.CharField(choices=[('self', 'self'), ('xl', 'xl'), ('tx', 'tx')], default='self', max_length=16, verbose_name='类别对应的模型')),
                ('expire_time', models.DateTimeField(help_text='过期时间', verbose_name='过期时间')),
            ],
            options={
                'verbose_name': '短链接记录',
                'verbose_name_plural': '短链接记录',
                'db_table': 'short_uri_records',
                'unique_together': {('type', 'url')},
            },
        ),
        migrations.CreateModel(
            name='ChatGPTConversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('title', models.CharField(help_text='会话名称', max_length=128, verbose_name='会话名称')),
                ('uuid', models.UUIDField(db_index=True, default=thirdApis.models.get_uuid, help_text='会话ID', verbose_name='会话ID')),
                ('user', models.ForeignKey(help_text='会话创建者', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='会话创建者')),
            ],
            options={
                'verbose_name': 'chatGPT聊天会谈',
                'verbose_name_plural': 'chatGPT聊天会谈',
                'db_table': 'chatGPT_conversation',
            },
        ),
        migrations.CreateModel(
            name='ApiCollectorSpiderRunRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('pid', models.IntegerField(default='unknown', help_text='脚本运行的进程ID', verbose_name='脚本运行的进程ID')),
                ('name', models.CharField(help_text='脚本名称', max_length=128, verbose_name='脚本名称')),
                ('log_path', models.CharField(help_text='脚本运行的日志地址', max_length=128, verbose_name='脚本运行的日志地址')),
                ('finish_time', models.DateTimeField(default=datetime.datetime.now, help_text='完成时间', verbose_name='完成时间')),
                ('result', models.SmallIntegerField(default=2, help_text='脚本运行结果,成功为0,异常为1,正在运行为2', verbose_name='脚本运行结果,成功为0,异常为1,正在运行为2')),
                ('unique_flag', models.CharField(help_text='脚本运行记录唯一标识', max_length=128, verbose_name='脚本运行记录唯一标识')),
                ('err_reason', models.TextField(help_text='错误信息', null=True, verbose_name='错误信息')),
                ('run_command', models.TextField(default='echo no-command', help_text='运行命令', verbose_name='运行命令')),
                ('invoker', models.ForeignKey(help_text='调用者', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='调用者')),
            ],
            options={
                'verbose_name': 'apiSpider执行记录',
                'verbose_name_plural': 'apiSpider执行记录',
                'db_table': 'ac_spider_run_record',
            },
        ),
        migrations.CreateModel(
            name='ApiCollectorSpiderResourceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('name', models.CharField(help_text='脚本名称', max_length=128, unique=True, verbose_name='脚本名称')),
                ('script_path', models.CharField(help_text='脚本储存路径', max_length=128, verbose_name='脚本储存路径')),
                ('last_run_time', models.DateTimeField(help_text='上次运行时间', null=True, verbose_name='上次运行时间')),
                ('run_count', models.PositiveIntegerField(default=0, help_text='运行次数', verbose_name='运行次数')),
                ('is_forbidden', models.BooleanField(default=False, help_text='该脚本是否被禁用', verbose_name='该脚本是否被禁用')),
                ('run_command', models.CharField(help_text='运行指令', max_length=256, null=True, verbose_name='运行指令')),
                ('description', models.TextField(help_text='脚本描述', null=True, verbose_name='脚本描述')),
                ('user', models.ForeignKey(help_text='创建者', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': 'apiSpider可用资源',
                'verbose_name_plural': 'apiSpider可用资源',
                'db_table': 'ac_spider_resource',
            },
        ),
    ]
